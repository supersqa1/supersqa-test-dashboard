
stages:
  - pre_deploy
  - deploy_to_staging
  - tests_on_staging
  - deploy_to_prod

#workflow:
#  rules:
#    - if: '$CI_PIPELINE_SOURCE == "push"'
#      when: never
#    - if: '$CI_COMMIT_BRANCH == "develop" && $CI_MERGE_REQUEST_APPROVED'
#      when: always

#  CI_MERGE_REQUEST_TARGET_BRANCH_NAME

variables:
  PY_IMAGE: python:3.11
  APP_DIR: /root/projects/automation_dashboard

code_quality:
  stage:
    pre_deploy
  image: $PY_IMAGE
  script:
    - pip3 install -r ./requirements.txt
    - pylint ./automationdashboard --recursive=true -E
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always


deploy_to_staging:
  stage:
    deploy_to_staging
  variables:
    ENVIRONMENT: staging
    APP_INSTANCE_DIR: ${APP_DIR}/${ENVIRONMENT}
    VIRTUAL_ENVIRONMENT: ${APP_INSTANCE_DIR}/venv_dashboard
    PORT: 9099
  script:
    - echo "job 1"
    - ls
    - pwd
    - bash deploy.sh
    - env
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always
      allow_failure: false
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
      allow_failure: false

deploy_to_prod:
  stage:
    deploy_to_prod
  variables:
    ENVIRONMENT: prod
    APP_INSTANCE_DIR: ${APP_DIR}/${ENVIRONMENT}
    VIRTUAL_ENVIRONMENT: ${APP_INSTANCE_DIR}/venv_dashboard
    PORT: 9098
  script:
    - echo "job 1"
    - ls
    - bash deploy.sh
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
      allow_failure: false

uat_automation_on_stage:
  stage:
    tests_on_staging
  image: $PY_IMAGE
  services:
    - selenium/standalone-firefox
  script:
    - echo "ABC"
    - pip3 install -r ./uat_automation/requirements.txt
    - pytest -m healthcheck ./uat_automation/tests
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: always
      allow_failure: false
